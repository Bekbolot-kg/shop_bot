from aiogram import types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from remind.remind_every_day import start_remind
from db.database import get_product
import aiofiles


ikb1 = InlineKeyboardMarkup(row_width=2)
ikb1.add(InlineKeyboardButton(text='–ù–∞—É—à–Ω–∏–∫–∏', callback_data='–Ω–∞—É—à–Ω–∏–∫–∏'),
        InlineKeyboardButton(text='–ú–∏–Ω–∏ –ø—Ä–∏–Ω—Ç–µ—Ä—ã', callback_data='–º–∏–Ω–∏_–ø—Ä–∏–Ω—Ç–µ—Ä—ã'),
        InlineKeyboardButton(text='Power Bank', callback_data='power_bank'),
        InlineKeyboardButton(text='Smart —á–∞—Å—ã', callback_data='smart_—á–∞—Å—ã'),
        InlineKeyboardButton(text='–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö', callback_data='—Å–∫–∏–¥–∫–∞'))

async def cmd_products(message: types.Message):
    '''–î–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫ –Ω–∏–º –∫–Ω–æ–ø–∫–∏ –≤ Inline —Ä–µ–∂–∏–º–µ'''

    await message.answer(text='–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ üîç', reply_markup=ikb1)
    await message.delete()

async def cb_products(callback: types.CallbackQuery):
    ''' –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Inline –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã '''

    ikb2 = InlineKeyboardMarkup(row_width=1)
    ikb2.add(InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å', url='https://t.me/Bko04'),
              InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ üîç', callback_data='–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤'))


    if callback.data == '–Ω–∞—É—à–Ω–∏–∫–∏':
        for pr in get_product():
             if pr[1] == '–ù–∞—É—à–Ω–∏–∫–∏':
                async with aiofiles.open(pr[4], 'rb') as product_pic:
                    await callback.message.answer_photo(photo=product_pic,
                                                        caption=f'–ù–∞—É—à–Ω–∏–∫ üéß: {pr[2]},   —Ü–µ–Ω–∞ üí∏: {pr[3]} ',
                                                        parse_mode='HTML',
                                                        reply_markup=ikb2)
    elif callback.data == '–º–∏–Ω–∏_–ø—Ä–∏–Ω—Ç–µ—Ä—ã':
        for pr in get_product():
             if pr[1] == '–ü—Ä–∏–Ω—Ç–µ—Ä—ã':
                async with aiofiles.open(pr[4], 'rb') as product_pic:
                    await callback.message.answer_photo(photo=product_pic,
                                                        caption=f'–ü—Ä–∏–Ω—Ç–µ—Ä üñ®Ô∏è: {pr[2]},  —Ü–µ–Ω–∞ üí∏: {pr[3]} ',
                                                        reply_markup=ikb2)
    elif callback.data == 'power_bank':
        for pr in get_product():
             if pr[1] == 'Power Bank':
                async with aiofiles.open(pr[4], 'rb') as product_pic:
                    await callback.message.answer_photo(photo=product_pic,
                                                        caption=f'Power Bank üîã: {pr[2]},  —Ü–µ–Ω–∞ üí∏: {pr[3]} ',
                                                        reply_markup=ikb2)
    elif callback.data == 'smart_—á–∞—Å—ã':
        for pr in get_product():
             if pr[1] == 'Smart —á–∞—Å—ã':
                async with aiofiles.open(pr[4], 'rb') as product_pic:
                    await callback.message.answer_photo(photo=product_pic,
                                                        caption=f'Smart —á–∞—Å—ã ‚åö: {pr[2]},  —Ü–µ–Ω–∞ üí∏: {pr[3]} ',
                                                        reply_markup=ikb2)

    elif callback.data == '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤':
        await callback.message.answer(text='–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ üîç', reply_markup=ikb1)

    elif callback.data == '—Å–∫–∏–¥–∫–∞':
        user_id = callback.from_user.id
        await start_remind(user_id)
        await callback.answer(text='–í–∞–º –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–∫–∏–¥–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã')


